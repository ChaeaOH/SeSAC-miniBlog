{"ast":null,"code":"var _jsxFileName = \"/Users/chaea/Downloads/react06-main/src/components/Main.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './../style/main.css';\nimport { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const listData = ['content01', 'content02', 'content03', 'content04'];\n  const [num, setNum] = useState(0);\n  const [check, setCheck] = useState('next');\n  const checkRef = useRef('next'); //console.log(checkRef)  {current:'next'} 객체 타입으로 값을 저장하고 사용 할 수 있다. 컴포넌트함수를 재 랜더링 하는 기능은 없다\n  //listData.unshift('more1')\n\n  listData.unshift(listData[listData.length - 1]);\n\n  const fncClassAdd = i => {\n    const on = i === num ? ' on' : ' on';\n    const view = 'view_';\n    const textNum = \"00000\" + (i + 1);\n    const viewText = view + textNum.slice(-2);\n    console.log(viewText);\n    return viewText + on;\n  };\n\n  const initialStyle = {\n    position: 'relative',\n    left: '-100%',\n    marginLeft: `${num * -100}%`\n  };\n  const [slideStyle, setSlideStyle] = useState(initialStyle);\n\n  const fncPrevStyle = () => {\n    setSlideStyle({ ...initialStyle,\n      transition: num !== 3 ? 'margin 500ms ease' : 'none',\n      animation: num === 3 ? 'lastSlide 500ms ease 1' : 'none'\n    });\n  };\n\n  const fncNextStyle = () => {\n    setSlideStyle({ ...initialStyle,\n      transition: num !== 0 ? 'margin 500ms ease' : 'none',\n      animation: num === 0 ? 'firstSlide 500ms ease 1' : 'none'\n    });\n  };\n\n  const fncPrevSlide = () => {\n    setNum(num <= 0 ? 3 : num - 1);\n    checkRef.current = 'prev';\n  };\n\n  const fncNextSlide = () => {\n    setNum(num >= 3 ? 0 : num + 1);\n    checkRef.current = 'next';\n  }; //  넥스트 버튼을클릭하면  fncNextSlid 호출 \n  //  num => +1   check=next \n  // useEffect 을 사용해서 num 변화를 감지해서, 체크상태 감지 next 가 들어가 있으면 \n  //fncNextStyle 함수를 호출해서 ul fncNextStyle 안의 스타일을 적용한다. \n\n\n  useEffect(() => {\n    checkRef.current === 'next' ? fncNextStyle() : fncPrevStyle();\n  }, [num]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uBA54\\uC778\\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"viewBox\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slideBtn\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: fncPrevSlide,\n          children: \"\\uC774\\uC804\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: fncNextSlide,\n          children: \"\\uC774\\uD6C4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"viewContents\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: slideStyle,\n        children: listData.map((list, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: fncClassAdd(index),\n            children: list\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Main, \"r0KYcfAR5ZZg/sx6wDNY74rFgxE=\");\n\n_c = Main;\nexport default Main;\n/* \nconst list = [1,2,3,4,5,a,b]\nconst list2 = list \nconst list2 = [...list]\nconst obj = {a:1,b:2,c:3}\n//const obj2=obj   참조만 맞춘것 \nconst obj2 ={...obj,c:4,b:1,e:8}\nconsole.log(obj , obj2)\n\nuseState  값이 바뀌면 해당하는 변수에 값을 재할당하기(업데이트) 컴포넌트를 다시 랜더링 한다. \n\nuseRef는 값이 바뀌더라도 리랜더 되지 않는다. \n\nconst box = { a : 0} \nbox.a = 10 \n\nconst useState [box , setBox] = useState(0)\nsetBox(10) \n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Main","listData","num","setNum","check","setCheck","checkRef","unshift","length","fncClassAdd","i","on","view","textNum","viewText","slice","console","log","initialStyle","position","left","marginLeft","slideStyle","setSlideStyle","fncPrevStyle","transition","animation","fncNextStyle","fncPrevSlide","current","fncNextSlide","map","list","index"],"sources":["/Users/chaea/Downloads/react06-main/src/components/Main.jsx"],"sourcesContent":["import React from 'react';\nimport './../style/main.css';\nimport { useState ,useEffect,useRef } from 'react';\n\nconst Main = () => {\n    const listData=['content01','content02','content03','content04']; \n    const [num,setNum] = useState(0);  \n    const [check,setCheck] = useState('next');\n    const checkRef = useRef('next')\n    //console.log(checkRef)  {current:'next'} 객체 타입으로 값을 저장하고 사용 할 수 있다. 컴포넌트함수를 재 랜더링 하는 기능은 없다\n\n    //listData.unshift('more1')\n    listData.unshift(listData[listData.length-1])\n    const fncClassAdd = (i) =>{\n        const on=(i===num)?' on':' on' ; \n        const view='view_';\n        const textNum=\"00000\"+(i+1);\n        const viewText=view+textNum.slice(-2); \n        console.log(viewText)\n        return viewText+on\n    }\n    const initialStyle = {\n        position:'relative',\n        left:'-100%',\n        marginLeft:`${num * -100}%`,\n    }\n    const [slideStyle,setSlideStyle]= useState(initialStyle)\n    \n    const fncPrevStyle = () => {\n        setSlideStyle({\n            ...initialStyle,\n            transition:(num!==3) ? 'margin 500ms ease':'none',\n            animation:(num===3)?'lastSlide 500ms ease 1':'none'\n        })\n    }\n    const fncNextStyle= () => {\n        setSlideStyle({\n            ...initialStyle,\n            transition:(num!==0) ? 'margin 500ms ease':'none',\n            animation:(num===0)? 'firstSlide 500ms ease 1' : 'none' \n        }) \n    }\n\n    const fncPrevSlide = () => {\n        setNum(num<=0?3:num-1);\n        checkRef.current = 'prev' ;\n    }\n\n    const  fncNextSlide  = () => {\n        setNum(num>=3?0:num+1);\n        checkRef.current = 'next' ;     \n    }\n\n //  넥스트 버튼을클릭하면  fncNextSlid 호출 \n //  num => +1   check=next \n // useEffect 을 사용해서 num 변화를 감지해서, 체크상태 감지 next 가 들어가 있으면 \n //fncNextStyle 함수를 호출해서 ul fncNextStyle 안의 스타일을 적용한다. \n    useEffect(()=>{\n        (checkRef.current === 'next') ? fncNextStyle() : fncPrevStyle () ;\n    },[num])\n\n    return (\n        <div className='mainContainer'>\n            <h2>메인페이지</h2>\n            <div className=\"viewBox\">\n                <div className='slideBtn'>\n                    <button type=\"button\" onClick={fncPrevSlide}>이전</button>\n                    <button type=\"button\" onClick={fncNextSlide}>이후</button>\n                </div>\n            </div>\n            <div className='viewContents'>\n                <ul style={slideStyle}>\n                    {\n                        listData.map((list,index)=>{\n                            return(\n                                <li className={fncClassAdd(index)} key={index}>{list}</li>\n                            )\n                        })\n                    }\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nexport default Main;\n\n/* \nconst list = [1,2,3,4,5,a,b]\nconst list2 = list \nconst list2 = [...list]\nconst obj = {a:1,b:2,c:3}\n//const obj2=obj   참조만 맞춘것 \nconst obj2 ={...obj,c:4,b:1,e:8}\nconsole.log(obj , obj2)\n\nuseState  값이 바뀌면 해당하는 변수에 값을 재할당하기(업데이트) 컴포넌트를 다시 랜더링 한다. \n\nuseRef는 값이 바뀌더라도 리랜더 되지 않는다. \n\nconst box = { a : 0} \nbox.a = 10 \n\nconst useState [box , setBox] = useState(0)\nsetBox(10) \n*/\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}